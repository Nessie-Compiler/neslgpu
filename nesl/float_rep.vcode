{ Generated by the NESL Compiler, Version 3.1.1, on 9/1/2011 15:42. }

FUNC MAIN1_1
CONST FLOAT 0.0
CONST INT 1
CALL SEQ_DIST_4
CONST FLOAT 1.0
CALL MAKE_SEQUENCE_8
CONST FLOAT 2.0
CALL MAKE_SEQUENCE_8
CONST FLOAT 999.0
CALL MAKE_SEQUENCE_8
CONST FLOAT 4.0
CALL MAKE_SEQUENCE_8
CONST INT 0
CONST INT 1
CONST INT 5
CALL ISEQ_19
COPY 1 1
CPOP 1 2
CPOP 1 2
CPOP 1 2
POP 1 0
I_TO_F
CONST FLOAT 999.0
CONST INT 3
CALL REP_25
CALL EQL_9
RET

FUNC /_15
COPY 1 0
CALL ZEROP_5
IF
CONST INT 32
MAKE_SEGDES
CONST CHAR "
RUNTIME ERROR: Divide by zero.
"
CALL PRINT_STRING_22
POP 1 0
CONST INT 0
EXIT
POP 1 0
CONST BOOL T
ELSE
CONST BOOL F
ENDIF
POP 1 0
CPOP 1 1
CPOP 1 1
/ INT
RET

FUNC ISEQ_19
COPY 1 1
CONST INT 1
< INT
COPY 1 3
COPY 1 2
> INT
OR BOOL
IF
CONST INT 71
MAKE_SEGDES
CONST CHAR "
RUNTIME ERROR: In [s:e:l], e must be >= to s, and l must be positive.
"
CALL PRINT_STRING_22
POP 1 0
CONST INT 0
EXIT
POP 1 0
CONST BOOL T
ELSE
CONST BOOL F
ENDIF
POP 1 0
COPY 1 2
- INT
CONST INT 1
- INT
COPY 1 1
+ INT
COPY 1 1
CALL /_15
MAKE_SEGDES
COPY 1 0
CPOP 1 3
CPOP 1 3
CPOP 1 3
INDEX
RET

FUNC PUT-SCALAR_17
CPOP 2 4
CPOP 2 4
POP 1 1
CPOP 2 3
COPY 1 1
CPOP 1 4
CPOP 1 4
CPOP 1 3
CPOP 1 5
CPOP 1 5
DPERMUTE FLOAT
RET

FUNC MAKE_SEQUENCE_8
CPOP 2 1
CPOP 1 2
CONST INT 1
CALL DIST_4
CALL ++_9
RET

FUNC PRIM-DIST_28
POP 1 0
RET

FUNC REP_25
CPOP 2 2
COPY 1 1
CPOP 1 1
CPOP 1 3
CPOP 1 4
CPOP 1 4
REPLACE FLOAT
RET

FUNC EQL-SCALAR_29
CPOP 1 2
CPOP 1 2
CPOP 1 2
POP 1 0
= FLOAT
RET

FUNC EQL_29
CPOP 1 2
CPOP 1 2
CPOP 1 2
CALL EQL-SCALAR_29
RET

FUNC ISEQ-L_10
POP 1 0
COPY 1 0
CPOP 1 3
CPOP 1 3
CPOP 1 3
INDEX
RET

FUNC DIST_4
MAKE_SEGDES
COPY 1 0
CPOP 1 2
CPOP 1 2
CALL PRIM-DIST_6
RET

FUNC SEQ_DIST_4
MAKE_SEGDES
COPY 1 0
CPOP 1 2
CPOP 1 2
CALL PRIM-DIST_6
RET

FUNC LEN-PUT-SCALAR_16
CPOP 2 3
CPOP 2 3
CONST FLOAT 0.0
CPOP 1 5
CALL DIST_4
CALL PUT-SCALAR_17
RET

FUNC PRIM-DIST_6
CPOP 1 1
CPOP 1 1
DIST FLOAT
RET

FUNC ZEROP_5
CONST INT 0
= INT
RET

FUNC ZIP-OVER_9
COPY 2 2
CALL LENGTH_12
COPY 2 1
CALL LENGTH_12
!= INT
IF
CONST INT 53
MAKE_SEGDES
CONST CHAR "
RUNTIME ERROR: Length mismatch in an apply-to-each.
"
CALL PRINT_STRING_22
POP 1 0
CONST INT 0
EXIT
POP 1 0
CONST BOOL T
ELSE
CONST BOOL F
ENDIF
POP 1 0
CPOP 2 2
CPOP 2 2
POP 1 1
CPOP 1 2
CPOP 1 2
CPOP 1 2
RET

FUNC EQL_9
COPY 2 2
CALL LENGTH_12
COPY 2 1
CALL LENGTH_12
= INT
IF
CPOP 2 2
CPOP 2 2
CALL ZIP-OVER_9
COPY 1 2
CALL PRIM-DIST_28
COPY 1 2
CPOP 1 3
CPOP 1 3
CPOP 1 3
CPOP 1 3
CALL EQL_29
COPY 1 1
AND_REDUCE BOOL
POP 1 1
ELSE
POP 0 0
POP 2 2
POP 2 0
CONST BOOL F
ENDIF
RET

FUNC ++_9
COPY 2 2
CONST INT 0
CONST INT 1
COPY 2 6
CALL ISEQ-L_10
COPY 2 4
CPOP 2 8
CALL LENGTH_12
CONST INT 1
CPOP 2 8
CALL ISEQ-L_10
CALL JOIN_14
RET

FUNC LENGTH_12
POP 1 0
LENGTHS
RET

FUNC JOIN_14
COPY 2 6
CPOP 2 6
COPY 2 6
CPOP 2 6
CPOP 2 10
CALL LENGTH_12
CPOP 2 9
CALL LENGTH_12
+ INT
CALL LEN-PUT-SCALAR_16
CALL PUT-SCALAR_17
RET

FUNC PRINT_STRING_22
POP 1 1
WRITE CHAR
POP 2 0
CONST BOOL T
RET
