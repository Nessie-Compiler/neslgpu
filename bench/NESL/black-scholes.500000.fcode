FUNC MAIN2_1
CONST INT 500000
COPY 1 0
MAKE_SEGDES
COPY 1 0
FUSED 0
COPY 1 1
CALL RAND_13
COPY 1 2
MAKE_SEGDES
COPY 1 0
FUSED 0
COPY 1 1
CALL RAND_13
COPY 1 4
MAKE_SEGDES
COPY 1 0
FUSED 1
COPY 1 1
CALL RAND_13
COPY 1 6
MAKE_SEGDES
COPY 1 0
FUSED 2
COPY 1 1
CALL RAND_13
CPOP 1 8
MAKE_SEGDES
COPY 1 0
FUSED 3
COPY 1 1
CALL RAND_13
START_TIMER
COPY 1 3
LENGTHS
CPOP 1 2
LENGTHS
!= INT
IF
CONST CHAR "
RUNTIME ERROR: Length mismatch in an apply-to-each.
"
WRITE CHAR
EXIT
ELSE
CONST BOOL F
ENDIF
COPY 1 5
LENGTHS
CPOP 1 4
LENGTHS
!= INT
IF
CONST CHAR "
RUNTIME ERROR: Length mismatch in an apply-to-each.
"
WRITE CHAR
EXIT
ELSE
CONST BOOL F
POP 1 1
ENDIF
COPY 1 6
LENGTHS
CPOP 1 5
LENGTHS
!= INT
IF
CONST CHAR "
RUNTIME ERROR: Length mismatch in an apply-to-each.
"
WRITE CHAR
EXIT
ELSE
CONST BOOL F
POP 1 1
ENDIF
COPY 1 7
LENGTHS
CPOP 1 6
LENGTHS
!= INT
IF
CONST CHAR "
RUNTIME ERROR: Length mismatch in an apply-to-each.
"
WRITE CHAR
EXIT
ELSE
CONST BOOL F
POP 1 1
ENDIF
COPY 2 4
COPY 1 8
CALL /_15
COPY 1 7
CALL LN_13
COPY 1 2
COPY 1 3
* FLOAT
COPY 1 8
FUSED 4
COPY 1 9
CALL /_15
CPOP 1 1
COPY 1 4
CPOP 1 2
COPY 1 6
FUSED 5
COPY 1 4
COPY 1 8
CALL SQRT_13
COPY 1 3
CPOP 1 1
* FLOAT
COPY 1 8
CALL /_15
COPY 1 4
COPY 1 8
CALL SQRT_13
COPY 1 1
CPOP 1 4
CPOP 1 2
FUSED 6
CPOP 1 1
COPY 1 7
CALL CND_13
CPOP 1 3
COPY 1 7
CALL NEGATE_13
CPOP 1 2
COPY 1 7
CALL CND_13
CPOP 1 6
CPOP 1 3
CPOP 1 6
CPOP 1 4
CPOP 1 6
CPOP 1 5
FUSED 7
STOP_TIMER
CONST INT 0
CONST INT 0
COPY 1 5
LENGTHS
COPY 1 2
CPOP 1 2
COPY 1 3
CPOP 1 3
FUSED 8
IF
CONST CHAR "
RUNTIME ERROR: Sequence reference (a[i]) out of bounds.
"
WRITE CHAR
EXIT
ELSE
CONST BOOL F
POP 1 4
ENDIF
CPOP 1 3
CPOP 1 2
CPOP 1 4
EXTRACT FLOAT
POP 1 1
CPOP 1 1
RET

FUNC POW4_42
CPOP 1 2
CPOP 1 1
CALL LN_13
FUSED 9
RET

FUNC /_15
COPY 1 0
LENGTHS
COPY 2 1
FUSED 10
COPY 1 2
+_REDUCE INT
CONST INT 0
COPY 1 2
CPOP 1 1
= INT
IF
CONST BOOL ()
POP 2 1
ELSE
COPY 1 0
COPY 1 2
= INT
IF
CONST CHAR "
RUNTIME ERROR: Divide by zero.
"
WRITE CHAR
EXIT
ELSE
COPY 1 1
CPOP 1 1
CPOP 1 2
FUSED 11
IF
COPY 1 0
FUSED 12
ELSE
CONST CHAR "
RUNTIME ERROR: Divide by zero.
"
WRITE CHAR
EXIT
ENDIF
ENDIF
ENDIF
CPOP 2 2
/ FLOAT
POP 2 1
RET

FUNC NEGATE_13
CPOP 1 1
FUSED 13
RET

FUNC CND_13
CONST FLOAT 0.356563782
CONST FLOAT 0.0
CPOP 1 1
- FLOAT
COPY 1 1
DIST FLOAT
CONST FLOAT 1.821255978
CONST FLOAT 0.0
CPOP 1 1
- FLOAT
COPY 1 2
DIST FLOAT
CONST FLOAT 4.0
CONST FLOAT 1.0
FUSED 14
COPY 1 3
DIST FLOAT
COPY 2 3
CALL PLUSP_13
COPY 2 4
CALL NEGATE_13
COPY 1 1
COPY 1 7
COPY 1 2
SELECT FLOAT
COPY 1 6
FUSED 1
COPY 1 7
COPY 1 8
COPY 1 5
COPY 1 11
COPY 1 6
FUSED 15
COPY 1 8
CALL /_15
COPY 1 7
FUSED 1
COPY 1 8
CPOP 1 6
FUSED 16
COPY 1 8
CALL SQRT_13
COPY 1 8
CALL /_15
CPOP 1 2
COPY 1 7
CALL NEGATE_13
CPOP 1 4
COPY 1 8
CPOP 1 5
FUSED 17
COPY 1 5
FUSED 4
COPY 1 6
CALL /_15
COPY 1 5
FUSED 18
COPY 1 3
CPOP 1 1
COPY 1 7
CALL POW4_42
COPY 1 6
FUSED 19
COPY 1 4
CPOP 1 1
COPY 1 8
CALL POW4_42
COPY 1 7
FUSED 20
COPY 1 5
CPOP 1 1
COPY 1 9
CALL POW4_42
COPY 1 8
COPY 2 4
COPY 1 11
COPY 1 9
COPY 1 12
COPY 1 11
COPY 1 12
COPY 1 16
COPY 1 11
COPY 1 16
COPY 1 12
COPY 1 20
COPY 1 13
FUSED 21
COPY 2 9
FUSED 22
COPY 1 10
LENGTHS
CPOP 1 12
COPY 1 12
FUSED 23
COPY 1 12
+_REDUCE INT
CONST INT 0
COPY 1 2
CPOP 1 1
= INT
IF
CONST FLOAT ()
POP 13 1
ELSE
COPY 1 0
COPY 1 2
= INT
IF
COPY 1 12
COPY 1 13
CPOP 2 9
COPY 1 14
COPY 1 12
CPOP 1 15
COPY 1 14
CPOP 1 15
COPY 1 17
CPOP 1 16
CPOP 2 16
CPOP 2 17
FUSED 24
POP 4 1
ELSE
COPY 1 1
CPOP 1 1
CPOP 1 2
FUSED 11
IF
POP 9 2
POP 1 0
ELSE
CONST INT 0
CONST INT 1
COPY 1 12
INDEX
CPOP 1 1
COPY 1 11
PACK INT
COPY 1 11
LENGTHS
COPY 1 1
DIST INT
COPY 2 1
COPY 1 4
CPOP 1 3
FUSED 25
COPY 1 1
OR_REDUCE BOOL
IF
CONST CHAR "
RUNTIME ERROR: Index out of bounds for function ->.
"
WRITE CHAR
EXIT
ELSE
CONST BOOL F
POP 8 4
ENDIF
COPY 2 2
COPY 1 6
COPY 1 4
BPERMUTE FLOAT
COPY 1 2
CPOP 1 1
FUSED 26
CPOP 1 3
CPOP 2 3
CPOP 1 5
DPERMUTE FLOAT
POP 1 1
ENDIF
ENDIF
ENDIF
RET

FUNC SQRT_13
COPY 2 0
CALL MINUSP_13
COPY 1 1
LENGTHS
CPOP 1 1
B_TO_I
COPY 1 2
+_REDUCE INT
CONST INT 0
COPY 1 2
CPOP 1 1
= INT
IF
CONST BOOL ()
POP 2 1
ELSE
COPY 1 0
COPY 1 2
= INT
IF
CONST CHAR "
RUNTIME ERROR: Sqrt of negative number.
"
WRITE CHAR
EXIT
ELSE
COPY 1 1
CPOP 1 1
CPOP 1 2
FUSED 11
IF
COPY 1 0
FUSED 12
ELSE
CONST CHAR "
RUNTIME ERROR: Sqrt of negative number.
"
WRITE CHAR
EXIT
ENDIF
ENDIF
ENDIF
CPOP 1 2
SQRT
POP 2 1
RET

FUNC MINUSP_13
FUSED 22
RET

FUNC LN_13
COPY 2 0
CALL MINUSP_13
COPY 1 1
LENGTHS
CPOP 1 1
B_TO_I
COPY 1 2
+_REDUCE INT
CONST INT 0
COPY 1 2
CPOP 1 1
= INT
IF
CONST BOOL ()
POP 2 1
ELSE
COPY 1 0
COPY 1 2
= INT
IF
CONST CHAR "
RUNTIME ERROR: Ln of negative number.
"
WRITE CHAR
EXIT
ELSE
COPY 1 1
CPOP 1 1
CPOP 1 2
FUSED 11
IF
COPY 1 0
FUSED 12
ELSE
CONST CHAR "
RUNTIME ERROR: Ln of negative number.
"
WRITE CHAR
EXIT
ENDIF
ENDIF
ENDIF
CPOP 1 2
LOG
POP 2 1
RET

FUNC PLUSP_13
FUSED 27
RET

FUNC RAND_13
COPY 2 0
CALL PLUSP_13
COPY 1 1
LENGTHS
CPOP 1 1
FUSED 28
COPY 1 2
+_REDUCE INT
CONST INT 0
COPY 1 2
CPOP 1 1
= INT
IF
CONST BOOL ()
POP 2 1
ELSE
COPY 1 0
COPY 1 2
= INT
IF
CONST CHAR "
RUNTIME ERROR: Rand only works with positive numbers.
"
WRITE CHAR
EXIT
ELSE
COPY 1 1
CPOP 1 1
CPOP 1 2
FUSED 11
IF
COPY 1 0
FUSED 12
ELSE
CONST CHAR "
RUNTIME ERROR: Rand only works with positive numbers.
"
WRITE CHAR
EXIT
ENDIF
ENDIF
ENDIF
CONST INT 1
CONST INT 30
LSHIFT
COPY 1 2
DIST INT
COPY 1 0
RAND
I_TO_F
CPOP 1 1
I_TO_F
CPOP 1 3
CALL /_15
CPOP 1 2
CPOP 1 1
* FLOAT
POP 1 1
RET
