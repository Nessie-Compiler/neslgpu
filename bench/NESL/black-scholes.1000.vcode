{ Generated by the NESL Compiler, Version 3.1.1, on 3/10/2012 14:46. }

FUNC MAIN2_1
CONST INT 1000
CALL BENCH_7
RET

FUNC PUT-SCALAR_48
CPOP 2 4
CPOP 2 4
POP 1 1
CPOP 2 3
COPY 1 1
CPOP 1 4
CPOP 1 4
CPOP 1 3
CPOP 1 5
CPOP 1 5
DPERMUTE FLOAT
RET

FUNC PUT_48
CPOP 2 4
CPOP 2 4
CPOP 2 4
CALL PUT-SCALAR_48
RET

FUNC PUT-SCALAR_25
CPOP 2 4
CPOP 2 4
POP 1 1
CPOP 2 3
COPY 1 1
CPOP 1 4
CPOP 1 4
CPOP 1 3
CPOP 1 5
CPOP 1 5
DPERMUTE BOOL
RET

FUNC PUT_25
CPOP 2 4
CPOP 2 4
CPOP 2 4
CALL PUT-SCALAR_25
RET

FUNC LENGTH_32
POP 2 0
LENGTHS
RET

FUNC PRIM-DIST_27
POP 1 0
RET

FUNC PRIM-DIST_16
CPOP 1 1
CPOP 1 1
DIST BOOL
RET

FUNC PRIM-COUNT_16
CPOP 1 1
B_TO_I
CPOP 1 1
+_REDUCE INT
RET

FUNC PRIM-DIST_19
CPOP 1 1
CPOP 1 1
DIST INT
RET

FUNC POW4_42
CPOP 1 1
COPY 1 1
POP 1 0
I_TO_F
COPY 1 1
POP 1 0
EXP
CPOP 1 2
COPY 1 2
CALL LN_13
CPOP 1 2
POP 1 0
* FLOAT
RET

FUNC ZIP-OVER_34
COPY 2 4
CALL LENGTH_29
COPY 4 1
CALL LENGTH_35
!= INT
IF
CONST INT 53
MAKE_SEGDES
CONST CHAR "
RUNTIME ERROR: Length mismatch in an apply-to-each.
"
CALL PRINT_STRING_5
POP 1 0
CONST INT 0
EXIT
POP 1 0
CONST BOOL T
ELSE
CONST BOOL F
ENDIF
POP 1 0
CPOP 2 4
CPOP 4 2
POP 1 3
CPOP 1 4
CPOP 1 4
CPOP 3 2
RET

FUNC ZIP-OVER_37
COPY 2 5
CALL LENGTH_29
COPY 5 1
CALL LENGTH_38
!= INT
IF
CONST INT 53
MAKE_SEGDES
CONST CHAR "
RUNTIME ERROR: Length mismatch in an apply-to-each.
"
CALL PRINT_STRING_5
POP 1 0
CONST INT 0
EXIT
POP 1 0
CONST BOOL T
ELSE
CONST BOOL F
ENDIF
POP 1 0
CPOP 2 5
CPOP 5 2
POP 1 4
CPOP 1 5
CPOP 1 5
CPOP 4 2
RET

FUNC BLACK_SCHOLES_CALL_40
COPY 1 5
COPY 1 5
COPY 1 2
CALL /_15
COPY 1 1
CALL LN_13
COPY 1 3
COPY 1 3
COPY 1 4
COPY 1 4
POP 1 0
* FLOAT
CONST FLOAT 2.0
COPY 1 4
CALL PRIM-DIST_13
COPY 1 4
CALL /_15
COPY 1 3
POP 1 0
+ FLOAT
COPY 1 5
COPY 1 3
POP 1 0
* FLOAT
COPY 1 2
POP 1 0
+ FLOAT
COPY 1 2
COPY 1 5
COPY 1 3
CALL SQRT_13
COPY 1 3
POP 1 0
* FLOAT
COPY 1 2
CALL /_15
COPY 1 0
CPOP 1 3
COPY 1 5
COPY 1 4
CALL SQRT_13
COPY 1 4
POP 1 0
* FLOAT
COPY 1 3
POP 1 0
- FLOAT
CPOP 1 6
CPOP 1 2
COPY 1 3
CALL CND_13
COPY 1 3
POP 1 0
* FLOAT
CPOP 1 5
CPOP 1 4
COPY 1 4
CALL NEGATE_13
CPOP 1 5
COPY 1 5
POP 1 0
* FLOAT
COPY 1 4
POP 1 0
EXP
COPY 1 4
POP 1 0
* FLOAT
CPOP 1 2
COPY 1 3
CALL CND_13
COPY 1 3
POP 1 0
* FLOAT
CPOP 1 2
POP 1 0
- FLOAT
RET

FUNC /_15
COPY 1 1
COPY 1 1
CALL ZEROP_13
COPY 1 1
LENGTHS
COPY 1 1
COPY 1 3
CALL PRIM-COUNT_16
COPY 1 1
COPY 1 1
- INT
COPY 1 2
CONST INT 0
= INT
IF
POP 1 3
POP 1 0
POP 1 1
POP 1 0
CONST BOOL ()
ELSE
CPOP 1 1
COPY 1 2
= INT
IF
POP 1 2
POP 1 0
POP 1 0
CONST INT 32
MAKE_SEGDES
CONST CHAR "
RUNTIME ERROR: Divide by zero.
"
CALL PRINT_STRING_5
POP 1 0
CONST INT 0
EXIT
POP 1 0
CONST BOOL T
COPY 1 1
CALL PRIM-DIST_16
ELSE
CPOP 1 1
= INT
IF
POP 1 0
CONST BOOL F
COPY 1 1
CALL PRIM-DIST_16
ELSE
CONST INT 0
CONST INT 1
COPY 1 3
INDEX
COPY 1 2
CPOP 1 1
CPOP 1 2
COPY 1 2
PACK INT
COPY 1 1
POP 2 2
COPY 2 0
POP 1 0
COPY 1 0
CONST INT 32
MAKE_SEGDES
CONST CHAR "
RUNTIME ERROR: Divide by zero.
"
CALL PRINT_STRING_5
POP 1 0
CONST INT 0
EXIT
POP 1 0
CONST BOOL T
CPOP 1 2
CALL PRIM-DIST_16
CPOP 2 2
COPY 1 4
CONST BOOL F
COPY 1 6
CALL PRIM-DIST_16
CALL PUT_25
POP 1 1
ENDIF
ENDIF
ENDIF
POP 1 0
CPOP 1 2
CPOP 1 2
CPOP 1 2
POP 1 0
/ FLOAT
RET

FUNC GET_NOCHECK_43
CPOP 2 2
CPOP 2 2
COPY 1 1
CPOP 1 3
CPOP 1 2
CPOP 1 4
CPOP 1 4
BPERMUTE FLOAT
RET

FUNC ->_43
COPY 2 2
CALL LENGTH_29
COPY 2 1
CPOP 1 2
COPY 1 2
CALL PRIM-DIST_19
COPY 1 2
CPOP 1 3
COPY 1 3
CONST INT 0
COPY 1 3
CALL PRIM-DIST_19
COPY 1 3
POP 1 0
< INT
CPOP 1 4
CPOP 1 4
COPY 1 4
POP 1 0
>= INT
CPOP 1 3
POP 1 0
OR BOOL
COPY 1 1
OR_REDUCE BOOL
POP 1 1
IF
CONST INT 53
MAKE_SEGDES
CONST CHAR "
RUNTIME ERROR: Index out of bounds for function ->.
"
CALL PRINT_STRING_5
POP 1 0
CONST INT 0
EXIT
POP 1 0
CONST BOOL T
ELSE
CONST BOOL F
ENDIF
POP 1 0
CPOP 2 2
CPOP 2 2
CALL GET_NOCHECK_43
RET

FUNC DIST_12
MAKE_SEGDES
COPY 1 0
CPOP 1 2
CPOP 1 2
CALL PRIM-DIST_13
RET

FUNC LENGTH_38
POP 4 0
LENGTHS
RET

FUNC NEGATE_13
CONST FLOAT 0.0
COPY 1 1
CALL PRIM-DIST_13
CPOP 1 2
CPOP 1 2
POP 1 0
- FLOAT
RET

FUNC ABS_13
COPY 1 1
COPY 1 1
CALL PLUSP_13
COPY 1 2
CPOP 1 3
COPY 1 3
CALL NEGATE_13
CPOP 1 3
POP 1 0
SELECT FLOAT
RET

FUNC CND_13
CONST FLOAT 0.31938153
COPY 1 1
CALL PRIM-DIST_13
CONST FLOAT 0.356563782
CALL NEGATE_9
COPY 1 2
CALL PRIM-DIST_13
CONST FLOAT 1.781477937
COPY 1 3
CALL PRIM-DIST_13
CONST FLOAT 1.821255978
CALL NEGATE_9
COPY 1 4
CALL PRIM-DIST_13
CONST FLOAT 1.330274429
COPY 1 5
CALL PRIM-DIST_13
CONST FLOAT 4.0
CONST FLOAT 1.0
ATAN
* FLOAT
COPY 1 6
CALL PRIM-DIST_13
COPY 1 7
COPY 1 7
CALL ABS_13
CONST FLOAT 1.0
COPY 1 8
CALL PRIM-DIST_13
CONST FLOAT 1.0
COPY 1 9
CALL PRIM-DIST_13
CONST FLOAT 0.2316419
COPY 1 10
CALL PRIM-DIST_13
COPY 1 3
COPY 1 11
POP 1 0
* FLOAT
COPY 1 10
POP 1 0
+ FLOAT
COPY 1 9
CALL /_15
CONST FLOAT 1.0
COPY 1 9
CALL PRIM-DIST_13
CONST FLOAT 1.0
COPY 1 10
CALL PRIM-DIST_13
CONST FLOAT 2.0
COPY 1 11
CALL PRIM-DIST_13
CPOP 1 5
COPY 1 11
POP 1 0
* FLOAT
COPY 1 10
CALL SQRT_13
COPY 1 10
CALL /_15
COPY 1 3
COPY 1 10
CALL NEGATE_13
CPOP 1 4
COPY 1 10
POP 1 0
* FLOAT
CONST FLOAT 2.0
COPY 1 10
CALL PRIM-DIST_13
COPY 1 10
CALL /_15
COPY 1 9
POP 1 0
EXP
COPY 1 9
POP 1 0
* FLOAT
CPOP 1 7
COPY 1 3
COPY 1 9
POP 1 0
* FLOAT
CPOP 1 7
COPY 1 4
COPY 1 9
POP 1 0
* FLOAT
COPY 1 4
COPY 1 9
POP 1 0
* FLOAT
COPY 1 8
POP 1 0
+ FLOAT
CPOP 1 6
COPY 1 4
CONST INT 3
COPY 1 9
CALL PRIM-DIST_19
COPY 1 9
CALL POW4_42
COPY 1 8
POP 1 0
* FLOAT
COPY 1 7
POP 1 0
+ FLOAT
CPOP 1 5
COPY 1 4
CONST INT 4
COPY 1 8
CALL PRIM-DIST_19
COPY 1 8
CALL POW4_42
COPY 1 7
POP 1 0
* FLOAT
COPY 1 6
POP 1 0
+ FLOAT
CPOP 1 4
CPOP 1 4
CONST INT 5
COPY 1 6
CALL PRIM-DIST_19
COPY 1 6
CALL POW4_42
COPY 1 5
POP 1 0
* FLOAT
COPY 1 4
POP 1 0
+ FLOAT
COPY 1 3
POP 1 0
* FLOAT
COPY 1 2
POP 1 0
- FLOAT
CPOP 1 2
CONST FLOAT 0.0
COPY 1 3
CALL PRIM-DIST_13
COPY 1 3
POP 1 0
< FLOAT
COPY 1 2
LENGTHS
COPY 1 1
COPY 1 4
CALL PRIM-COUNT_16
COPY 1 1
COPY 1 1
- INT
COPY 1 2
CONST INT 0
= INT
IF
POP 1 1
POP 1 1
POP 1 0
POP 1 0
POP 1 1
POP 1 0
CONST FLOAT ()
ELSE
CPOP 1 1
COPY 1 2
= INT
IF
POP 1 2
POP 1 0
POP 1 0
CONST FLOAT 1.0
COPY 1 2
CALL PRIM-DIST_13
CPOP 1 1
CPOP 1 2
POP 1 0
- FLOAT
ELSE
CPOP 1 1
= INT
IF
POP 1 2
POP 1 0
ELSE
CONST INT 0
CONST INT 1
COPY 1 4
INDEX
COPY 1 3
CPOP 1 1
CPOP 1 2
COPY 1 2
PACK INT
COPY 1 1
POP 2 2
COPY 1 3
COPY 1 3
COPY 2 2
CALL ->_43
POP 1 1
COPY 2 1
POP 1 0
COPY 1 0
CONST FLOAT 1.0
COPY 1 2
CALL PRIM-DIST_13
CPOP 1 3
CPOP 1 3
POP 1 0
- FLOAT
CPOP 2 2
CPOP 1 5
CPOP 1 5
CALL PUT_48
POP 1 1
ENDIF
ENDIF
ENDIF
RET

FUNC SQRT_13
COPY 1 1
COPY 1 1
CALL MINUSP_13
COPY 1 1
LENGTHS
COPY 1 1
COPY 1 3
CALL PRIM-COUNT_16
COPY 1 1
COPY 1 1
- INT
COPY 1 2
CONST INT 0
= INT
IF
POP 1 3
POP 1 0
POP 1 1
POP 1 0
CONST BOOL ()
ELSE
CPOP 1 1
COPY 1 2
= INT
IF
POP 1 2
POP 1 0
POP 1 0
CONST INT 41
MAKE_SEGDES
CONST CHAR "
RUNTIME ERROR: Sqrt of negative number.
"
CALL PRINT_STRING_5
POP 1 0
CONST INT 0
EXIT
POP 1 0
CONST BOOL T
COPY 1 1
CALL PRIM-DIST_16
ELSE
CPOP 1 1
= INT
IF
POP 1 0
CONST BOOL F
COPY 1 1
CALL PRIM-DIST_16
ELSE
CONST INT 0
CONST INT 1
COPY 1 3
INDEX
COPY 1 2
CPOP 1 1
CPOP 1 2
COPY 1 2
PACK INT
COPY 1 1
POP 2 2
COPY 2 0
POP 1 0
COPY 1 0
CONST INT 41
MAKE_SEGDES
CONST CHAR "
RUNTIME ERROR: Sqrt of negative number.
"
CALL PRINT_STRING_5
POP 1 0
CONST INT 0
EXIT
POP 1 0
CONST BOOL T
CPOP 1 2
CALL PRIM-DIST_16
CPOP 2 2
COPY 1 4
CONST BOOL F
COPY 1 6
CALL PRIM-DIST_16
CALL PUT_25
POP 1 1
ENDIF
ENDIF
ENDIF
POP 1 0
CPOP 1 1
CPOP 1 1
POP 1 0
SQRT
RET

FUNC MINUSP_13
CPOP 1 1
CONST FLOAT 0.0
COPY 1 2
CALL PRIM-DIST_13
CPOP 1 2
POP 1 0
< FLOAT
RET

FUNC LN_13
COPY 1 1
COPY 1 1
CALL MINUSP_13
COPY 1 1
LENGTHS
COPY 1 1
COPY 1 3
CALL PRIM-COUNT_16
COPY 1 1
COPY 1 1
- INT
COPY 1 2
CONST INT 0
= INT
IF
POP 1 3
POP 1 0
POP 1 1
POP 1 0
CONST BOOL ()
ELSE
CPOP 1 1
COPY 1 2
= INT
IF
POP 1 2
POP 1 0
POP 1 0
CONST INT 39
MAKE_SEGDES
CONST CHAR "
RUNTIME ERROR: Ln of negative number.
"
CALL PRINT_STRING_5
POP 1 0
CONST INT 0
EXIT
POP 1 0
CONST BOOL T
COPY 1 1
CALL PRIM-DIST_16
ELSE
CPOP 1 1
= INT
IF
POP 1 0
CONST BOOL F
COPY 1 1
CALL PRIM-DIST_16
ELSE
CONST INT 0
CONST INT 1
COPY 1 3
INDEX
COPY 1 2
CPOP 1 1
CPOP 1 2
COPY 1 2
PACK INT
COPY 1 1
POP 2 2
COPY 2 0
POP 1 0
COPY 1 0
CONST INT 39
MAKE_SEGDES
CONST CHAR "
RUNTIME ERROR: Ln of negative number.
"
CALL PRINT_STRING_5
POP 1 0
CONST INT 0
EXIT
POP 1 0
CONST BOOL T
CPOP 1 2
CALL PRIM-DIST_16
CPOP 2 2
COPY 1 4
CONST BOOL F
COPY 1 6
CALL PRIM-DIST_16
CALL PUT_25
POP 1 1
ENDIF
ENDIF
ENDIF
POP 1 0
CPOP 1 1
CPOP 1 1
POP 1 0
LOG
RET

FUNC ZEROP_13
CPOP 1 1
CONST FLOAT 0.0
COPY 1 2
CALL PRIM-DIST_13
CPOP 1 2
POP 1 0
= FLOAT
RET

FUNC RAND-INTERNAL_13
COPY 1 0
CALL PRIM-DIST_27
CONST INT 1
CONST INT 30
LSHIFT
COPY 1 1
CALL PRIM-DIST_19
CPOP 1 2
COPY 1 1
COPY 1 3
POP 1 0
RAND
COPY 1 3
POP 1 0
I_TO_F
CPOP 1 2
COPY 1 3
POP 1 0
I_TO_F
COPY 1 3
CALL /_15
CPOP 1 2
POP 1 0
* FLOAT
RET

FUNC PLUSP_13
CPOP 1 1
CONST FLOAT 0.0
COPY 1 2
CALL PRIM-DIST_13
CPOP 1 2
POP 1 0
> FLOAT
RET

FUNC RAND_13
COPY 1 1
COPY 1 1
CALL PLUSP_13
COPY 1 1
POP 1 0
NOT BOOL
COPY 1 1
LENGTHS
COPY 1 1
COPY 1 3
CALL PRIM-COUNT_16
COPY 1 1
COPY 1 1
- INT
COPY 1 2
CONST INT 0
= INT
IF
POP 1 3
POP 1 0
POP 1 1
POP 1 0
CONST BOOL ()
ELSE
CPOP 1 1
COPY 1 2
= INT
IF
POP 1 2
POP 1 0
POP 1 0
CONST INT 55
MAKE_SEGDES
CONST CHAR "
RUNTIME ERROR: Rand only works with positive numbers.
"
CALL PRINT_STRING_5
POP 1 0
CONST INT 0
EXIT
POP 1 0
CONST BOOL T
COPY 1 1
CALL PRIM-DIST_16
ELSE
CPOP 1 1
= INT
IF
POP 1 0
CONST BOOL F
COPY 1 1
CALL PRIM-DIST_16
ELSE
CONST INT 0
CONST INT 1
COPY 1 3
INDEX
COPY 1 2
CPOP 1 1
CPOP 1 2
COPY 1 2
PACK INT
COPY 1 1
POP 2 2
COPY 2 0
POP 1 0
COPY 1 0
CONST INT 55
MAKE_SEGDES
CONST CHAR "
RUNTIME ERROR: Rand only works with positive numbers.
"
CALL PRINT_STRING_5
POP 1 0
CONST INT 0
EXIT
POP 1 0
CONST BOOL T
CPOP 1 2
CALL PRIM-DIST_16
CPOP 2 2
COPY 1 4
CONST BOOL F
COPY 1 6
CALL PRIM-DIST_16
CALL PUT_25
POP 1 1
ENDIF
ENDIF
ENDIF
POP 1 0
CPOP 1 1
CPOP 1 1
CALL RAND-INTERNAL_13
RET

FUNC PRIM-DIST_13
CPOP 1 1
CPOP 1 1
DIST FLOAT
RET

FUNC BENCH_7
CONST FLOAT 100.0
COPY 1 1
CALL DIST_12
COPY 1 1
CPOP 1 2
CPOP 1 2
CPOP 1 2
CALL RAND_13
CONST FLOAT 100.0
COPY 1 3
CALL DIST_12
COPY 1 1
CPOP 1 2
CPOP 1 2
CPOP 1 2
CALL RAND_13
CONST FLOAT 1.0
COPY 1 5
CALL DIST_12
COPY 1 1
CPOP 1 2
CPOP 1 2
CPOP 1 2
CALL RAND_13
CONST FLOAT 0.05
COPY 1 7
CALL DIST_12
COPY 1 1
CPOP 1 2
CPOP 1 2
CPOP 1 2
CALL RAND_13
CONST FLOAT 0.4
CPOP 1 9
CALL DIST_12
COPY 1 1
CPOP 1 2
CPOP 1 2
CPOP 1 2
CALL RAND_13
CONST INT 0
START_TIMER
POP 1 0
CPOP 2 8
CPOP 2 8
CPOP 2 8
CPOP 2 8
CPOP 2 8
CALL ZIP-OVER_28
CALL ZIP-OVER_31
CALL ZIP-OVER_34
CALL ZIP-OVER_37
COPY 1 5
CPOP 1 6
CPOP 1 6
CPOP 1 6
CPOP 1 6
CPOP 1 6
CPOP 1 6
CPOP 1 6
CALL BLACK_SCHOLES_CALL_40
CONST INT 0
POP 1 0
STOP_TIMER
CPOP 2 1
CONST INT 0
CALL ELT_50
CPOP 1 1
RET

FUNC ZIP-OVER_31
COPY 2 3
CALL LENGTH_29
COPY 3 1
CALL LENGTH_32
!= INT
IF
CONST INT 53
MAKE_SEGDES
CONST CHAR "
RUNTIME ERROR: Length mismatch in an apply-to-each.
"
CALL PRINT_STRING_5
POP 1 0
CONST INT 0
EXIT
POP 1 0
CONST BOOL T
ELSE
CONST BOOL F
ENDIF
POP 1 0
CPOP 2 3
CPOP 3 2
POP 1 2
CPOP 1 3
CPOP 1 3
CPOP 2 2
RET

FUNC LENGTH_35
POP 3 0
LENGTHS
RET

FUNC ELT_NOCHECK_50
CPOP 2 1
CPOP 1 2
CPOP 1 2
EXTRACT FLOAT
RET

FUNC ELT_50
COPY 1 0
CONST INT 0
< INT
COPY 1 1
COPY 2 3
CALL LENGTH_29
>= INT
OR BOOL
IF
CONST INT 57
MAKE_SEGDES
CONST CHAR "
RUNTIME ERROR: Sequence reference (a[i]) out of bounds.
"
CALL PRINT_STRING_5
POP 1 0
CONST INT 0
EXIT
POP 1 0
CONST BOOL T
ELSE
CONST BOOL F
ENDIF
POP 1 0
CPOP 2 1
CPOP 1 2
CALL ELT_NOCHECK_50
RET

FUNC ZIP-OVER_28
COPY 2 2
CALL LENGTH_29
COPY 2 1
CALL LENGTH_29
!= INT
IF
CONST INT 53
MAKE_SEGDES
CONST CHAR "
RUNTIME ERROR: Length mismatch in an apply-to-each.
"
CALL PRINT_STRING_5
POP 1 0
CONST INT 0
EXIT
POP 1 0
CONST BOOL T
ELSE
CONST BOOL F
ENDIF
POP 1 0
CPOP 2 2
CPOP 2 2
POP 1 1
CPOP 1 2
CPOP 1 2
CPOP 1 2
RET

FUNC NEGATE_9
CONST FLOAT 0.0
CPOP 1 1
- FLOAT
RET

FUNC LENGTH_29
POP 1 0
LENGTHS
RET

FUNC PRINT_STRING_5
POP 1 1
WRITE CHAR
POP 2 0
CONST BOOL T
RET
